"use strict";

//muuttujat
const path = require("path");
const express = require("express");
const exp = express();
const port = 3000;
const host = "localhost";
const Tietovarasto = require("./sqlvarasto/tietovarastokerros");
const varasto = new Tietovarasto();


//express set
exp.set("view engine", "ejs");
exp.set("views", path.join(__dirname, "sivut"));


//express use
exp.use(express.urlencoded({ extended: false }));
exp.use(express.static(path.join(__dirname, "public")));

//apufunktiot
function tilaviesti(res, status) {
    res.render('tilasivu', {
        kieli: 'fi',
        otsikko: 'Status',
        aihe: status.tyyppi === 'virhe' ? 'Virhe' : 'Tila', //if(virhe){virhe="Virhe"}else{virhe="Tila"}
        status
    });
};

//express sivut
//valikko
exp.get("/", (req, res) => {
    res.render("valikko", {
        otsikko: 'Valikko',
        valinnat: [
            { reitti: '/haeKaikki', teksti: 'Hae kaikki pelit' },
            { reitti: '/hae', teksti: 'Hae peli' },
            { reitti: '/lisaa', teksti: 'Lisää peli' },
            { reitti: '/paivita', teksti: 'Muuta pelin tietoja' },
            { reitti: '/poista', teksti: 'Poista pelin tiedot' }
        ]
    });
});


//haeKaikki
exp.get('/haeKaikki', (req, res) => varasto.haeKaikki()
    .then(tulostaulu => res.render('taulukko', {
        otsikko: 'Kaikki pelit',
        sarakeotsikot: ['Numero', 'Nimi', 'Lukumaara', 'Vuosi', 'Genre'],
        tulostaulu
       }
    )).catch(virhe => tilaviesti(res, virhe)));


// hae & hakutulos
exp.get("/hae", (req, res) => {
    res.render("lomake", {
        otsikko: 'Pelin haku',
        toiminto: '/hakutulos',
   
        kentat: [
            {
                nimi: 'Pelin numero',
                tyyppi: 'number',
                name: 'numero',
                id: 'numero',
                koko: 6,
                value: '',
                readonly: ''
            }
        ]
    });
});

exp.post("/hakutulos",async(req,res)=>{
    try{
        const numero=req.body.numero;
        const tulos=await varasto.hae(numero);
        const kentat=[];

        for(const [nro,tieto] of Object.entries(tulos)){
            const [eka,...muut]=nro;
            const nimi=eka.toUpperCase()+muut.join("");
            kentat.push({nimi,tieto});
        }
        res.render('tulossivu', {
            otsikko: 'Hakutulos',
            kentat
        })
    
    }catch(virhe){
        tilaviesti(res,virhe);
    }
});

// lisaa & tallennaLisays
exp.get('/lisaa', (req,res)=>res.render('lomake',{
    otsikko: "Syöttölomake",
    toiminto: "/tallennaLisays",
    kentat: [
        {
            nimi: 'Numero',
            tyyppi: 'number',
            name: 'numero',
            id: 'numero',
            koko: 6,
            value: '',
            readonly: ''
        },
        {
            nimi: 'Nimi',
            tyyppi: 'text',
            name: 'nimi',
            id: 'nimi',
            koko: 20,
            value: '',
            readonly: ''
        },
        {
            nimi: 'Lukumaara',
            tyyppi: 'number',
            name: 'lukumaara',
            id: 'lukumaara',
            koko: 30,
            value: '',
            readonly: ''
        },
        {
            nimi: 'Vuosi',
            tyyppi: 'number',
            name: 'vuosi',
            id: 'vuosi',
            koko: 15,
            value: '',
            readonly: ''
        },
        {
            nimi: 'Genre',
            tyyppi: 'text',
            name: 'genre',
            id: 'genre',
            koko: 10,
            value: '',
            readonly: ''
        }
    ],
    valikkoteksti: "Valikko"
}));

exp.post('/tallennaLisays', async (req,res)=>{
    try{
        const peli=req.body;
        const status=await varasto.lisaa(peli);
        tilaviesti(res,status);
    }
    catch(virhe){
        tilaviesti(res,virhe);
    }
});


// poisto
exp.get("/poista", (req, res) => {
    res.render("lomake", {
        otsikko: 'Pelin poisto',
        toiminto: '/suoritaPoisto',
   
        kentat: [
            {
                nimi: 'Pelin numero',
                tyyppi: 'number',
                name: 'numero',
                id: 'numero',
                koko: 6,
                value: '',
                readonly: ''
            }
        ]
    });
});

exp.post("/suoritaPoisto",async(req,res)=>{
    try{
        const numero=req.body.numero;
        const tulos=await varasto.poista(numero);

        res.render('tilasivu', {
            otsikko: 'Poiston tulos',
            status:tulos
                })
    
    }catch(virhe){
        tilaviesti(res,virhe);
    }
});


//paivitys
exp.get('/paivita', (req, res) => res.render('lomake', {
    kieli: "fi",
    otsikko: "Päivitys",
    toiminto: "/haePaivitettava",
    kentat: [
        {
            nimi: 'Numero',
            tyyppi: 'number',
            name: 'numero',
            id: 'numero',
            koko: 6,
            value: '',
            readonly: ''
        },
        {
            nimi: 'Nimi',
            tyyppi: 'text',
            name: 'nimi',
            id: 'nimi',
            koko: 20,
            value: '',
            readonly: 'readonly'
        },
        {
            nimi: 'Lukumäärä',
            tyyppi: 'text',
            name: 'lukumaara',
            id: 'lukumaara',
            koko: 30,
            value: '',
            readonly: 'readonly'
        },
        {
            nimi: 'Vuosi',
            tyyppi: 'number',
            name: 'vuosi',
            id: 'vuosi',
            koko: 15,
            value: '',
            readonly: 'readonly'
        },
        {
            nimi: 'Genre',
            tyyppi: 'text',
            name: 'genre',
            id: 'genre',
            koko: 10,
            value: '',
            readonly: 'readonly'
        }
    ],
    laheta: "Lähetä tiedot",
    valikkoteksti: "Valikko"
}));

exp.post('/haePaivitettava', async (req,res)=>{
    try{
        const numero=req.body.numero;
        const peli=await varasto.hae(numero);
        res.render('lomake', {
            otsikko: "Muutoslomake",
            toiminto: "/tallennaPaivitys",
            kentat: [
                {
                    nimi: 'Numero',
                    tyyppi: 'number',
                    name: 'numero',
                    id: 'numero',
                    koko: 6,
                    value: peli.numero,
                    readonly: 'readonly'
                },
                {
                    nimi: 'Nimi',
                    tyyppi: 'text',
                    name: 'nimi',
                    id: 'nimi',
                    koko: 20,
                    value: peli.nimi,
                    readonly: ''
                },
                {
                    nimi: 'Lukumäärä',
                    tyyppi: 'number',
                    name: 'lukumaara',
                    id: 'lukumaara',
                    koko: 30,
                    value: peli.lukumaara,
                    readonly: ''
                },
                {
                    nimi: 'Vuosi',
                    tyyppi: 'number',
                    name: 'vuosi',
                    id: 'vuosi',
                    koko: 15,
                    value: peli.vuosi,
                    readonly: ''
                },
                {
                    nimi: 'Genre',
                    tyyppi: 'text',
                    name: 'genre',
                    id: 'genre',
                    koko: 10,
                    value: peli.genre,
                    readonly: ''
                }
            ],
            laheta: "Lähetä tiedot",
        });
    }
    catch(virhe){
        tilaviesti(res, virhe);
    }
});

exp.post('/tallennaPaivitys', (req,res)=>varasto.paivita(req.body)
    .then(status=>tilaviesti(res,status))
    .catch(virhe=>tilaviesti(res,virhe)));
exp.listen(port, host, () => console.log(`${host}:${port} kuuntelee korvat höröllä`));
